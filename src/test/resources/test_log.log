2020-03-14 20:24:11.318 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss:SSS , GMT+8} %m [%c:%L]-[%p] %n】，开始...
2020-03-14 20:24:11.344 [DEBUG] [main] c.t.l.l.LogLayout - Converter is ch.qos.logback.classic.pattern.DateConverter@4cc0edeb
2020-03-14 20:24:11.345 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss:SSS , GMT+8} %m [%c:%L]-[%p] %n】，结束...
2020-03-14 20:24:11.382 [DEBUG] [main] c.t.l.p.MessageParser - find group  [%c:%L]-[%p] 
2020-03-14 20:24:11.382 [DEBUG] [main] c.t.l.p.MessageParser - find group  [com.teddy.log.layout.LogLayout:32]-[DEBUG] 
2020-03-14 20:24:11.396 [DEBUG] [main] c.t.l.p.MessageParser - find group :32]-[DEBUG] 
2020-03-14 20:24:11.397 [DEBUG] [main] c.t.l.p.MessageParser - find group ]-[DEBUG] 
2020-03-14 20:24:11.397 [DEBUG] [main] c.t.l.p.MessageParser - find group ] 
2020-03-14 20:24:11.398 [DEBUG] [main] c.t.l.l.LogLayout - parse result:
{Date=2020-03-14 15:06:11:214, Message=初始化日志格式【%d{yyyy-MM-dd HH:mm:ss:SSS , GMT+8} %m [%c:%L]-[%p] %n】，开始..., Logger=com.teddy.log.layout.LogLayout, LineOfCaller=32, Level=DEBUG}
2020-03-14 20:25:52.242 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，开始...
2020-03-14 20:25:52.250 [DEBUG] [main] c.t.l.l.LogLayout - Converter is ch.qos.logback.classic.pattern.DateConverter@564fabc8
2020-03-14 20:25:52.251 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，结束...
2020-03-14 20:25:52.258 [DEBUG] [main] c.t.l.p.MessageParser - find group ] [main] c.t.l.l.LogLayout - 
2020-03-14 20:25:52.260 [DEBUG] [main] c.t.l.p.MessageParser - find group ] c.t.l.l.LogLayout - 
2020-03-14 20:25:52.261 [DEBUG] [main] c.t.l.p.MessageParser - find group  - 
2020-03-14 20:25:52.262 [DEBUG] [main] c.t.l.l.LogLayout - parse result:
{Date=2020-03-14 20:24:11.345, Level=DEBUG, Thread=main, Logger=c.t.l.l.LogLayout, Message=初始化日志格式【%d{yyyy-MM-dd HH:mm:ss:SSS , GMT+8} %m [%c:%L]-[%p] %n】，结束...}
2020-03-14 20:26:36.384 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，开始...
2020-03-14 20:26:36.434 [DEBUG] [main] c.t.l.l.LogLayout - Converter is ch.qos.logback.classic.pattern.DateConverter@564fabc8
2020-03-14 20:26:36.434 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，结束...
2020-03-14 20:26:36.441 [DEBUG] [main] c.t.l.p.MessageParser - find group ] [main] c.t.l.l.LogLayout - 
2020-03-14 20:26:36.443 [DEBUG] [main] c.t.l.p.MessageParser - find group ] c.t.l.l.LogLayout - 
2020-03-14 20:26:36.444 [DEBUG] [main] c.t.l.p.MessageParser - find group  - 
2020-03-14 20:26:36.444 [DEBUG] [main] c.t.l.l.LogLayout - parse result:
{Date=2020-03-14 20:24:11.345, Level=DEBUG, Thread=main, Logger=c.t.l.l.LogLayout, Message=初始化日志格式【%d{yyyy-MM-dd HH:mm:ss:SSS , GMT+8} %m [%c:%L]-[%p] %n】，结束...}
2020-03-14 20:59:42.605 [ERROR] [main] c.t.l.split.LogSplit - 解析日志文件【】失败
java.io.FileNotFoundException:  (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at com.teddy.log.split.LogSplit.split(LogSplit.java:29)
	at com.teddy.log.layout.LogLayoutTest.test_log_split(LogLayoutTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2020-03-14 21:00:08.032 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，开始...
2020-03-14 21:00:08.040 [DEBUG] [main] c.t.l.l.LogLayout - Converter is ch.qos.logback.classic.pattern.DateConverter@4678c730
2020-03-14 21:00:08.041 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，结束...
2020-03-14 21:00:08.070 [DEBUG] [main] c.t.l.p.MessageParser - find group ] [main] c.t.l.l.LogLayout - 
2020-03-14 21:00:08.075 [DEBUG] [main] c.t.l.p.MessageParser - find group ] c.t.l.l.LogLayout - 
2020-03-14 21:00:08.076 [DEBUG] [main] c.t.l.p.MessageParser - find group  - 
2020-03-14 21:00:08.076 [DEBUG] [main] c.t.l.l.LogLayout - parse result:
{Date=2020-03-14 20:24:11.345, Level=DEBUG, Thread=main, Logger=c.t.l.l.LogLayout, Message=初始化日志格式【%d{yyyy-MM-dd HH:mm:ss:SSS , GMT+8} %m [%c:%L]-[%p] %n】，结束...}
2020-03-14 21:00:24.162 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，开始...
2020-03-14 21:00:24.180 [DEBUG] [main] c.t.l.l.LogLayout - Converter is ch.qos.logback.classic.pattern.DateConverter@6767c1fc
2020-03-14 21:00:24.182 [DEBUG] [main] c.t.l.l.LogLayout - 初始化日志格式【%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] %logger{20} - %msg%n】，结束...
2020-03-14 21:00:24.201 [DEBUG] [main] c.t.l.p.MessageParser - find group ] [main] c.t.l.l.LogLayout - 
2020-03-14 21:00:24.206 [DEBUG] [main] c.t.l.p.MessageParser - find group ] c.t.l.l.LogLayout - 
2020-03-14 21:00:24.208 [DEBUG] [main] c.t.l.p.MessageParser - find group  - 
2020-03-14 21:00:24.210 [DEBUG] [main] c.t.l.l.LogLayout - parse result:
{Date=2020-03-14 20:24:11.345, Level=DEBUG, Thread=main, Logger=c.t.l.l.LogLayout, Message=初始化日志格式【%d{yyyy-MM-dd HH:mm:ss:SSS , GMT+8} %m [%c:%L]-[%p] %n】，结束...}
2020-03-14 21:00:31.530 [ERROR] [main] c.t.l.split.LogSplit - 解析日志文件【】失败
java.io.FileNotFoundException:  (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at com.teddy.log.split.LogSplit.split(LogSplit.java:29)
	at com.teddy.log.layout.LogLayoutTest.test_log_split(LogLayoutTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
